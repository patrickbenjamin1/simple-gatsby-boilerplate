import { GatsbyNode } from 'gatsby'
import * as path from 'path'

import { Routes } from '../../src/utils/routes'
import { Paths } from '../utils/paths'

export const createPages: GatsbyNode['createPages'] = async ({ actions: { createPage } }) => {
  // type Edges<T> = { edges: Array<{ node: T }> }
  // type WithUid<T = {}> = { uid: string } & T

  // // must define type manually as autogenerated types are generated after this step
  // type Response = {
  //   allPrismicBlogPost: Edges<WithUid<{ data: { type: { document: WithUid } } }>>
  //   allPrismicBlogPostType: Edges<WithUid>
  //   allPrismicInfoPage: Edges<WithUid>
  // }

  // const { data } = (await graphql(`
  //   query createPagesQuery {
  //   }
  // `)) as { data: Response } // using the generic ruins the plugin that gives me proper gql syntax highlighting, so need to cast here

  createPage({
    component: path.resolve(Paths.views, 'home.tsx'),
    path: Routes.home,
    context: {},
  })
}
